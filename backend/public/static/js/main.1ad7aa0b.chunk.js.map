{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","end","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","storedData","parse","getItem","remainingTime","setTimeout","clearTimeout","useAuth","path","element","replace","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.1ad7aa0b.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({ \r\n    isLoggedIn: false,  // default values\r\n    userId: null,\r\n    token: null,\r\n    login: () => {}, \r\n    logout: () => {}\r\n});","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n    return (\n        <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n            <div className=\"lds-dual-ring\"></div>\n        </div>\n    );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        // expiration date of token is 1h (it was set in the backend part)\r\n        // so here, we get the current date in millis and add 1000 * 60 * 60 = 1hour to this date\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem('userData', \r\n            JSON.stringify(\r\n                {\r\n                    userId: uid, \r\n                    token, \r\n                    expiration: tokenExpirationDate.toISOString()\r\n                }\r\n            ));\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        setTokenExpirationDate(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        // here, we check if token is in localStorage and if it`s expiration date is still in the future (so this token is valid)\r\n        if (storedData?.token && new Date(storedData?.expiration) > new Date()) {\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n          const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n          logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n          clearTimeout(logoutTimer);\r\n        }\r\n      }, [token, logout, tokenExpirationDate]);\r\n\r\n    return { token, login, logout, userId };\r\n}","import React from \"react\";\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = (props) => {\r\n    return (\r\n        <header className=\"main-header\">{props.children}</header>\r\n    )\r\n}\r\n\r\nexport default MainHeader;","import React, { useContext } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = (props) => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to=\"/\" end>ALL USERS</NavLink>\r\n            </li>\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n                </li>\r\n            )}\r\n            {!auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <button onClick={auth.logout}>LOGOUT</button>\r\n                </li>\r\n            )}\r\n        </ul>   \r\n    )\r\n}\r\n\r\nexport default NavLinks;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = (props) => {\r\n    const content = (\r\n        <CSSTransition \r\n            in={props.show} \r\n            timeout={200}\r\n            classNames=\"slide-in-left\"\r\n            mountOnEnter\r\n            unmountOnExit>\r\n            <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n        </CSSTransition>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n}\r\n\r\nexport default SideDrawer;","import React, {useState} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = (props) => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n    const openDrawerHandler = () => setDrawerIsOpen(true);\r\n\r\n    const closeDrawerHandler = () => setDrawerIsOpen(false);\r\n\r\n    return (\r\n        <>\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className=\"main-navigation__drawer-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </SideDrawer>\r\n            <MainHeader>\r\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </button>\r\n                <h1 className=\"main-navigation__title\">\r\n                    <Link to=\"/\">YourPlaces</Link>\r\n                </h1>\r\n                <nav className=\"main-navigation__header-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </MainHeader>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainNavigation;","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n    const { token, login, logout, userId } = useAuth();\n\n    let routes;\n\n    if (token) {\n        routes = (\n            <Routes>\n                <Route path=\"/\" element={<Users />}></Route>\n                <Route path=\"/places/new\" element={<NewPlace />}></Route>\n                <Route path=\"/:userId/places\" element={<UserPlaces />}></Route>\n                <Route path=\"/places/:placeId\" element={<UpdatePlace />}></Route>\n                <Route path=\"*\" element={<Navigate to=\"/\" replace />}></Route>\n            </Routes>\n        );\n    } else {\n        routes = (\n            <Routes>\n                <Route path=\"/\" element={<Users />}></Route>\n                <Route path=\"/:userId/places\" element={<UserPlaces />}></Route>\n                <Route path=\"/auth\" element={<Auth />}></Route>\n                <Route path=\"*\" element={<Navigate to=\"/auth\" replace />}></Route>\n            </Routes>\n        );\n    }\n\n    return (\n        <AuthContext.Provider value={{ isLoggedIn: !!token, token, login, logout, userId }}>\n            <Router>\n                <MainNavigation />\n                <main>\n                    <Suspense fallback={\n                        <div className='center'>\n                            <LoadingSpinner />\n                        </div>\n                    }>\n                        {routes}\n                    </Suspense>\n                </main>\n            </Router>\n        </AuthContext.Provider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}