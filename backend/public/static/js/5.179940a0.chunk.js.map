{"version":3,"sources":["shared/components/FormElements/Button.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","onCancel","onClear","header","show","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","timeout","mountOnEnter","unmountOnExit","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","requestController","ok","Error","message","useEffect","forEach","abortController","abort","clearError","Card","Avatar","src","image","alt","width","height","UserItem","id","name","placeCount","process","UsersList","items","length","map","user","places","Users","loadedUsers","setLoadedUsers","users","fetchUsers","LoadingSpinner"],"mappings":"qGAAA,iCA6CeA,IAxCA,SAACC,GACf,OAAIA,EAAMC,KAER,uBACCC,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YACRH,EAAMI,SAAW,kBADT,YAELJ,EAAMK,QAAU,kBACpBJ,KAAMD,EAAMC,MAEXD,EAAMM,UAINN,EAAMO,GAER,kBAAC,IAAD,CACCA,GAAIP,EAAMO,GACVC,MAAOR,EAAMQ,MACbN,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YACRH,EAAMI,SAAW,kBADT,YAELJ,EAAMK,QAAU,mBAEnBL,EAAMM,UAKT,4BACCJ,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YACRH,EAAMI,SAAW,kBADT,YAELJ,EAAMK,QAAU,kBACpBI,KAAMT,EAAMS,KACZC,QAASV,EAAMU,QACfC,SAAUX,EAAMW,UAEfX,EAAMM,Y,gCCxCV,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,gCCAA,oCAkBeC,IAbI,SAAAnC,GACf,OACI,kBAAC,IAAD,CACIoC,SAAUpC,EAAMqC,QAChBC,OAAO,qBACPC,OAAQvC,EAAMsB,MACdkB,OAAQ,kBAAC,IAAD,CAAQ9B,QAASV,EAAMqC,SAAvB,SAER,2BAAIrC,EAAMsB,U,gCCbtB,oDAOMmB,GAPN,MAOqB,SAACzC,GAClB,IAAM0C,EACF,yBAAKxC,UAAS,gBAAWF,EAAME,WAAayC,MAAO3C,EAAM2C,OACrD,4BAAQzC,UAAS,wBAAmBF,EAAM4C,cACtC,4BAAK5C,EAAMsC,SAEf,0BAAMO,SAAU7C,EAAM6C,SAAW7C,EAAM6C,SAAW,SAACC,GAAD,OAAWA,EAAMC,mBAC/D,yBAAK7C,UAAS,yBAAoBF,EAAMgD,eACnChD,EAAMM,UAEX,4BAAQJ,UAAS,wBAAmBF,EAAMiD,cACrCjD,EAAMwC,UAKvB,OAAOU,IAASC,aAAaT,EAASU,SAASC,eAAe,iBAqBnDC,IAlBD,SAACtD,GACX,OACI,oCACKA,EAAMuC,MACH,kBAAC,IAAD,CAAU7B,QAASV,EAAMoC,WAE7B,kBAAC,IAAD,CACImB,GAAIvD,EAAMuC,KACViB,QAAS,IACTC,cAAY,EACZC,eAAa,EACbC,WAAW,SACX,kBAAClB,EAAiBzC,O,q4MCpC3B,IAAM4D,EAAgB,WACzB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,qBAA1B,mBAAOvC,EAAP,KAAc0C,EAAd,KAEMC,EAAqBC,iBAAO,IAE5BC,EAAcC,sBAAW,uCAC3B,WAAOC,GAAP,oGAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GACnDT,GAAa,GACPU,EAAsB,IAAIC,gBAChCT,EAAmBU,QAAQC,KAAKH,GAHhC,kBAK2BI,MAAMR,EAAK,CAC9BC,SACAC,OACAC,UACAM,OAAQL,EAAoBK,SATpC,cAKUC,EALV,iBAY+BA,EAASC,OAZxC,WAYUC,EAZV,OAcIhB,EAAmBU,QAAUV,EAAmBU,QAAQO,QAAO,SAAAC,GAAiB,OAC5EA,IAAsBV,KAErBM,EAASK,GAjBlB,uBAkBc,IAAIC,MAAMJ,EAAaK,SAlBrC,eAqBIvB,GAAa,GArBjB,kBAsBWkB,GAtBX,wCAwBIjB,EAAS,KAAIsB,SACbvB,GAAa,GAzBjB,+DAD2B,sDA6B5B,IAWH,OAPAwB,qBAAU,WAEN,OAAO,WACHtB,EAAmBU,QAAQa,SAAQ,SAAAC,GAAe,OAAIA,EAAgBC,cAE3E,IAEI,CAAE5B,YAAWxC,QAAO6C,cAAawB,WATrB,kBAAM3B,EAAS,U,gCCvCtC,0BAYe4B,IARF,SAAA5F,GACX,OACE,yBAAKE,UAAS,eAAUF,EAAME,WAAayC,MAAO3C,EAAM2C,OACrD3C,EAAMM,Y,uNCSEuF,G,MAZA,SAAA7F,GACb,OACE,yBAAKE,UAAS,iBAAYF,EAAME,WAAayC,MAAO3C,EAAM2C,OACxD,yBACEmD,IAAK9F,EAAM+F,MACXC,IAAKhG,EAAMgG,IACXrD,MAAO,CAAEsD,MAAOjG,EAAMiG,MAAOC,OAAQlG,EAAMiG,YCgBpCE,G,MAlBE,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,GAAIC,EAA6B,EAA7BA,KAAMN,EAAuB,EAAvBA,MAAOO,EAAgB,EAAhBA,WAChC,OACI,wBAAIpG,UAAU,aACV,kBAAC0F,EAAA,EAAD,CAAM1F,UAAU,sBACZ,kBAAC,IAAD,CAAMK,GAAE,WAAM6F,EAAN,YACJ,yBAAKlG,UAAU,oBACX,kBAAC,EAAD,CAAQ6F,MAAK,UAAKQ,0CAAL,OAAuCR,GAASC,IAAKK,KAEtE,yBAAKnG,UAAU,mBACX,4BAAKmG,GACL,4BAAKC,EAAL,IAAiC,IAAfA,EAAmB,QAAU,SAA/C,WCeTE,G,MA1BG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAChB,OAAqB,IAAjBA,EAAMC,OAEF,yBAAKxG,UAAU,UACX,kBAAC0F,EAAA,EAAD,KACI,gDAMZ,wBAAI1F,UAAU,cAENuG,EAAME,KAAI,SAAAC,GAAI,OACV,kBAAC,EAAD,CACI1F,IAAK0F,EAAKR,GACVA,GAAIQ,EAAKR,GACTL,MAAOa,EAAKb,MACZM,KAAMO,EAAKP,KACXC,WAAYM,EAAKC,OAAOH,e,g0MCUjCI,UA7BD,WACV,MAAoDlD,cAA7CE,EAAP,EAAOA,UAAWxC,EAAlB,EAAkBA,MAAO6C,EAAzB,EAAyBA,YAAawB,EAAtC,EAAsCA,WACtC,EAAsC9B,qBAAtC,mBAAOkD,EAAP,KAAoBC,EAApB,KAcA,OAZAzB,qBAAU,YACU,uCAAG,6GAEgBpB,EAAY,GAAD,OAAIoC,4CAAJ,WAF3B,OAELtB,EAFK,OAIX+B,EAAe/B,EAAagC,OAJjB,uGAAH,qDAQhBC,KACD,CAAC/C,IAGA,oCACI,kBAAChC,EAAA,EAAD,CAAYb,MAAOA,EAAOe,QAASsD,IAClC7B,GACG,yBAAK5D,UAAU,UACX,kBAACiH,EAAA,EAAD,QAGNrD,GAAaiD,GAAe,kBAAC,EAAD,CAAWN,MAAOM","file":"static/js/5.179940a0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n\tif (props.href) {\n\t\treturn (\n\t\t\t<a\n\t\t\t\tclassName={`button button--${props.size || \"default\"} ${\n\t\t\t\t\tprops.inverse && \"button--inverse\"\n\t\t\t\t} ${props.danger && \"button--danger\"}`}\n\t\t\t\thref={props.href}\n\t\t\t>\n\t\t\t\t{props.children}\n\t\t\t</a>\n\t\t);\n\t}\n\tif (props.to) {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tto={props.to}\n\t\t\t\texact={props.exact}\n\t\t\t\tclassName={`button button--${props.size || \"default\"} ${\n\t\t\t\t\tprops.inverse && \"button--inverse\"\n\t\t\t\t} ${props.danger && \"button--danger\"}`}\n\t\t\t>\n\t\t\t\t{props.children}\n\t\t\t</Link>\n\t\t);\n\t}\n\treturn (\n\t\t<button\n\t\t\tclassName={`button button--${props.size || \"default\"} ${\n\t\t\t\tprops.inverse && \"button--inverse\"\n\t\t\t} ${props.danger && \"button--danger\"}`}\n\t\t\ttype={props.type}\n\t\t\tonClick={props.onClick}\n\t\t\tdisabled={props.disabled}\n\t\t>\n\t\t\t{props.children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n    return (\n        <Modal\n            onCancel={props.onClear}\n            header=\"An Error Occurred!\"\n            show={!!props.error}\n            footer={<Button onClick={props.onClear}>Okay</Button>}\n        >\n            <p>{props.error}</p>\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = (props) => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault() }>\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n}\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <>\r\n            {props.show && (\r\n                <Backdrop onClick={props.onCancel} />\r\n            )}\r\n            <CSSTransition\r\n                in={props.show}\r\n                timeout={200}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                classNames=\"modal\">\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","import { useState, useCallback, useEffect, useRef } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    \r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortController = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortController);\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortController.signal // link an AbortController to this request (to be able to cancel this request)\r\n            });\r\n    \r\n            const responseData = await response.json();\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(requestController => \r\n                requestController !== httpAbortController);\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }      \r\n    }, []);\r\n\r\n    const clearError = () => setError(null);\r\n\r\n    useEffect(() => {\r\n        // clean resources\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortController => abortController.abort());\r\n        }\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\n\r\nimport './UserItem.css';\r\n\r\nconst UserItem = ({id, name, image, placeCount}) => {\r\n    return (\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n                <Link to={`/${id}/places`}>\r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}${image}`} alt={name} />\r\n                    </div>\r\n                    <div className=\"user-item__info\">\r\n                        <h2>{name}</h2>\r\n                        <h3>{placeCount} {placeCount === 1 ? 'Place' : 'Places'} </h3>\r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default UserItem;","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport UserItem from \"./UserItem\";\r\n\r\nimport './UsersList.css';\r\n\r\nconst UsersList = ({items}) => {\r\n    if (items.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>No users found</h2>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <ul className=\"users-list\">\r\n            {\r\n                items.map(user => (\r\n                    <UserItem \r\n                        key={user.id} \r\n                        id={user.id} \r\n                        image={user.image} \r\n                        name={user.name} \r\n                        placeCount={user.places.length}/>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default UsersList;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users`);\r\n\r\n                setLoadedUsers(responseData.users);\r\n            } catch(err) {        \r\n            }\r\n        }\r\n        fetchUsers();\r\n    }, [sendRequest]);\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users;"],"sourceRoot":""}