{"version":3,"sources":["shared/components/FormElements/Button.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/valitators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","user/pages/Auth.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","onCancel","onClear","header","show","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","timeout","mountOnEnter","unmountOnExit","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","requestController","ok","Error","message","useEffect","forEach","abortController","abort","clearError","Card","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","i","length","source","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","email","password","inputHandler","setFormData","authSubmitHandler","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","asOverlay","prevMode"],"mappings":"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","file":"static/js/2.4d403212.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n\tif (props.href) {\n\t\treturn (\n\t\t\t<a\n\t\t\t\tclassName={`button button--${props.size || \"default\"} ${\n\t\t\t\t\tprops.inverse && \"button--inverse\"\n\t\t\t\t} ${props.danger && \"button--danger\"}`}\n\t\t\t\thref={props.href}\n\t\t\t>\n\t\t\t\t{props.children}\n\t\t\t</a>\n\t\t);\n\t}\n\tif (props.to) {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tto={props.to}\n\t\t\t\texact={props.exact}\n\t\t\t\tclassName={`button button--${props.size || \"default\"} ${\n\t\t\t\t\tprops.inverse && \"button--inverse\"\n\t\t\t\t} ${props.danger && \"button--danger\"}`}\n\t\t\t>\n\t\t\t\t{props.children}\n\t\t\t</Link>\n\t\t);\n\t}\n\treturn (\n\t\t<button\n\t\t\tclassName={`button button--${props.size || \"default\"} ${\n\t\t\t\tprops.inverse && \"button--inverse\"\n\t\t\t} ${props.danger && \"button--danger\"}`}\n\t\t\ttype={props.type}\n\t\t\tonClick={props.onClick}\n\t\t\tdisabled={props.disabled}\n\t\t>\n\t\t\t{props.children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n    return (\n        <Modal\n            onCancel={props.onClear}\n            header=\"An Error Occurred!\"\n            show={!!props.error}\n            footer={<Button onClick={props.onClear}>Okay</Button>}\n        >\n            <p>{props.error}</p>\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = (props) => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault() }>\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n}\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <>\r\n            {props.show && (\r\n                <Backdrop onClick={props.onCancel} />\r\n            )}\r\n            <CSSTransition\r\n                in={props.show}\r\n                timeout={200}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                classNames=\"modal\">\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","import { useState, useCallback, useEffect, useRef } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    \r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortController = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortController);\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortController.signal // link an AbortController to this request (to be able to cancel this request)\r\n            });\r\n    \r\n            const responseData = await response.json();\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(requestController => \r\n                requestController !== httpAbortController);\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }      \r\n    }, []);\r\n\r\n    const clearError = () => setError(null);\r\n\r\n    useEffect(() => {\r\n        // clean resources\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortController => abortController.abort());\r\n        }\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MINLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MAXLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n    for (const validator of validators) {\r\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MIN) {\r\n            isValid = isValid && +value >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAX) {\r\n            isValid = isValid && +value <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n        }\r\n    }\r\n    return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/valitators\";\r\n\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            }\r\n        case 'TOUCH': \r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = (props) => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '', \r\n        isTouched: false,\r\n        isValid: props.initialValid || false\r\n    });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n    \r\n    const changeHandler = event => {\r\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators});\r\n    }\r\n\r\n    const touchHandler = event => {\r\n        dispatch({type: 'TOUCH'});\r\n    }\r\n\r\n    const element = props.element === 'input' ? \r\n        <input \r\n            id={props.id} \r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value} /> : \r\n        <textarea id={props.id} \r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            value={inputState.value}\r\n            onBlur={touchHandler} />\r\n\r\n    return ( \r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import {useCallback, useReducer} from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'INPUT_CHANGE': \r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                // if some 'input' property is undefined, just continue (necessary when we are switching a \r\n                // login modal to a signup modal and therefore changing the fields required to be fulfilled)\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }  \r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: {value: action.value, isValid: action.isValid}\r\n                },\r\n                isValid: formIsValid\r\n            }\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n// custom hook\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n\r\n        // stores a validity of individual inputs\r\n        inputs: initialInputs,\r\n\r\n        // whether the overall form is valid\r\n        isValid: initialFormValidity \r\n    });\r\n\r\n    // function to check the overall form validity\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE', \r\n            value, \r\n            isValid, \r\n            inputId: id\r\n        })\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, []);\r\n\r\n    // return an array so we can consume it inside components\r\n    return [formState, inputHandler, setFormData]; \r\n}\r\n\r\n ","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        // filereader is used to create an image preview based on the file that user has selected\r\n        const fileReader = new FileReader();\r\n        // onload() will execute each time the user selects a file\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    }\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        // input type that used for picking files is 'file' so we have this property 'files' on the event target\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n\r\n            setFile(pickedFile);\r\n            setIsValid(true); // isValid is not changed immediately, updating state takes some time to proceed\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type=\"file\"\r\n                accept=\".jpg,.png,.jpeg\"\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>\r\n                    PICK IMAGE\r\n                </Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/valitators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient(); // custom hook\r\n\r\n    // use a custom hook\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    const authSubmitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/login`, 'POST',\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value \r\n                    }), \r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch(err) {\r\n                 // empty catch block because we handle errors in our custom useHttpClient hook\r\n            }\r\n        } else {\r\n            const formData = new FormData();\r\n            formData.append('email', formState.inputs.email.value);\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('password', formState.inputs.password.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n\r\n            try { \r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/signup`, 'POST', formData);\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (err) {}\r\n        }\r\n    }\r\n\r\n    const switchModeHandler = () => {\r\n        // if we are switching to a login mode, then the overall form validity will depend on\r\n        // email and password only \r\n        if (!isLoginMode) {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: undefined,\r\n                image: undefined\r\n            }, formState.inputs.email.isValid && formState.inputs.password.isValid);\r\n        } else { // we are moving to a signup mode\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                },\r\n                image: {\r\n                    value: null,\r\n                    isValid: false\r\n                }\r\n            }, false);\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Login Required</h2>\r\n                <hr />\r\n                <form onSubmit={authSubmitHandler}>\r\n                    {!isLoginMode && (\r\n                        <Input \r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            element=\"input\"\r\n                            label=\"Your Name\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter a name.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\" />}\r\n                    <Input \r\n                        element=\"input\"\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid email address.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n\r\n                    <Input \r\n                        element=\"input\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        validators={[VALIDATOR_MINLENGTH(6)]}\r\n                        errorText=\"Please enter a valid password (at least 6 characters).\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                    </Button>\r\n                </form>\r\n\r\n                <Button inverse onClick={switchModeHandler}>\r\n                    SWICTH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n                </Button>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;"],"sourceRoot":""}